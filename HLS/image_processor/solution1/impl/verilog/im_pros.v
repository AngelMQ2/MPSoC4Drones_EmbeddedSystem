// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="im_pros_im_pros,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.928000,HLS_SYN_LAT=120660,HLS_SYN_TPT=none,HLS_SYN_MEM=16,HLS_SYN_DSP=0,HLS_SYN_FF=411,HLS_SYN_LUT=1018,HLS_VERSION=2020_2}" *)

module im_pros (
        ap_clk,
        ap_rst_n,
        s_axi_AXI_CPU_AWVALID,
        s_axi_AXI_CPU_AWREADY,
        s_axi_AXI_CPU_AWADDR,
        s_axi_AXI_CPU_WVALID,
        s_axi_AXI_CPU_WREADY,
        s_axi_AXI_CPU_WDATA,
        s_axi_AXI_CPU_WSTRB,
        s_axi_AXI_CPU_ARVALID,
        s_axi_AXI_CPU_ARREADY,
        s_axi_AXI_CPU_ARADDR,
        s_axi_AXI_CPU_RVALID,
        s_axi_AXI_CPU_RREADY,
        s_axi_AXI_CPU_RDATA,
        s_axi_AXI_CPU_RRESP,
        s_axi_AXI_CPU_BVALID,
        s_axi_AXI_CPU_BREADY,
        s_axi_AXI_CPU_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_pp0_stage0 = 12'd2;
parameter    ap_ST_fsm_pp0_stage1 = 12'd4;
parameter    ap_ST_fsm_pp0_stage2 = 12'd8;
parameter    ap_ST_fsm_pp0_stage3 = 12'd16;
parameter    ap_ST_fsm_pp0_stage4 = 12'd32;
parameter    ap_ST_fsm_pp0_stage5 = 12'd64;
parameter    ap_ST_fsm_pp0_stage6 = 12'd128;
parameter    ap_ST_fsm_pp0_stage7 = 12'd256;
parameter    ap_ST_fsm_pp0_stage8 = 12'd512;
parameter    ap_ST_fsm_pp0_stage9 = 12'd1024;
parameter    ap_ST_fsm_state14 = 12'd2048;
parameter    C_S_AXI_AXI_CPU_DATA_WIDTH = 32;
parameter    C_S_AXI_AXI_CPU_ADDR_WIDTH = 16;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXI_CPU_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_AXI_CPU_AWVALID;
output   s_axi_AXI_CPU_AWREADY;
input  [C_S_AXI_AXI_CPU_ADDR_WIDTH - 1:0] s_axi_AXI_CPU_AWADDR;
input   s_axi_AXI_CPU_WVALID;
output   s_axi_AXI_CPU_WREADY;
input  [C_S_AXI_AXI_CPU_DATA_WIDTH - 1:0] s_axi_AXI_CPU_WDATA;
input  [C_S_AXI_AXI_CPU_WSTRB_WIDTH - 1:0] s_axi_AXI_CPU_WSTRB;
input   s_axi_AXI_CPU_ARVALID;
output   s_axi_AXI_CPU_ARREADY;
input  [C_S_AXI_AXI_CPU_ADDR_WIDTH - 1:0] s_axi_AXI_CPU_ARADDR;
output   s_axi_AXI_CPU_RVALID;
input   s_axi_AXI_CPU_RREADY;
output  [C_S_AXI_AXI_CPU_DATA_WIDTH - 1:0] s_axi_AXI_CPU_RDATA;
output  [1:0] s_axi_AXI_CPU_RRESP;
output   s_axi_AXI_CPU_BVALID;
input   s_axi_AXI_CPU_BREADY;
output  [1:0] s_axi_AXI_CPU_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [13:0] imageIn_address0;
reg    imageIn_ce0;
wire   [7:0] imageIn_q0;
reg   [13:0] imageOut_address0;
reg    imageOut_ce0;
reg    imageOut_we0;
reg   [7:0] imageOut_d0;
reg   [6:0] i_reg_259;
reg   [13:0] indvar_flatten_reg_271;
reg   [6:0] j_reg_283;
reg   [7:0] reg_304;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state13_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [0:0] icmp_ln17_reg_920;
reg   [7:0] reg_308;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln20_1_reg_968;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] select_ln17_2_reg_954;
reg   [0:0] icmp_ln20_reg_983;
wire   [6:0] indvars_iv_next303_fu_312_p2;
reg   [6:0] indvars_iv_next303_reg_902;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [13:0] tmp_2_fu_318_p3;
reg   [13:0] tmp_2_reg_909;
wire   [0:0] icmp_ln17_fu_337_p2;
wire   [0:0] icmp_ln18_fu_343_p2;
reg   [0:0] icmp_ln18_reg_924;
wire   [6:0] select_ln17_fu_349_p3;
reg   [6:0] select_ln17_reg_932;
wire   [6:0] select_ln17_1_fu_357_p3;
reg   [6:0] select_ln17_1_reg_947;
wire   [0:0] select_ln17_2_fu_369_p3;
wire   [0:0] trunc_ln17_fu_377_p1;
reg   [0:0] trunc_ln17_reg_958;
reg   [13:0] imageOut_addr_2_reg_963;
wire   [0:0] icmp_ln20_1_fu_401_p2;
wire   [13:0] tmp_8_fu_407_p3;
reg   [13:0] tmp_8_reg_977;
wire   [0:0] icmp_ln20_fu_419_p2;
wire   [13:0] tmp_fu_475_p3;
reg   [13:0] tmp_reg_997;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [6:0] indvars_iv_next303_mid1_fu_483_p2;
reg   [6:0] indvars_iv_next303_mid1_reg_1003;
wire   [8:0] ret_4_fu_506_p2;
reg   [8:0] ret_4_reg_1008;
wire   [8:0] ret_11_fu_532_p2;
reg   [8:0] ret_11_reg_1019;
wire   [9:0] ret_15_fu_619_p2;
reg   [9:0] ret_15_reg_1039;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [6:0] add_ln18_fu_688_p2;
reg   [6:0] add_ln18_reg_1049;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [13:0] select_ln17_4_fu_709_p3;
reg   [13:0] select_ln17_4_reg_1064;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [8:0] ret_10_fu_744_p2;
reg   [8:0] ret_10_reg_1074;
wire   [8:0] add_ln1346_2_fu_768_p2;
reg   [8:0] add_ln1346_2_reg_1084;
wire   [63:0] select_ln17_5_fu_774_p3;
reg   [63:0] select_ln17_5_reg_1089;
wire   [13:0] add_ln17_fu_781_p2;
reg   [13:0] add_ln17_reg_1094;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [13:0] imageOut_addr_reg_1114;
wire    ap_block_pp0_stage8_subdone;
reg    ap_condition_pp0_exit_iter0_state10;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage9_subdone;
reg   [6:0] ap_phi_mux_i_phi_fu_263_p4;
wire    ap_block_pp0_stage0;
reg   [13:0] ap_phi_mux_indvar_flatten_phi_fu_275_p4;
wire    ap_block_pp0_stage1;
reg   [6:0] ap_phi_mux_j_phi_fu_287_p4;
wire   [63:0] zext_ln215_1_fu_326_p1;
wire   [63:0] zext_ln34_fu_389_p1;
wire   [63:0] zext_ln215_14_fu_458_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln215_11_fu_470_p1;
wire   [63:0] zext_ln215_18_fu_519_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln215_17_fu_568_p1;
wire   [63:0] zext_ln215_19_fu_580_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln215_13_fu_585_p1;
wire   [63:0] zext_ln18_fu_595_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln215_15_fu_649_p1;
wire   [63:0] zext_ln215_fu_693_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln215_6_fu_704_p1;
wire   [63:0] tmp_1_fu_727_p3;
wire    ap_block_pp0_stage7;
wire   [63:0] tmp_4_fu_755_p3;
wire   [63:0] zext_ln215_16_fu_824_p1;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln22_fu_838_p1;
wire   [0:0] cmp2_mid1_fu_364_p2;
wire   [0:0] cmp2_fu_331_p2;
wire   [13:0] tmp_9_fu_381_p3;
wire   [6:0] or_ln20_fu_395_p2;
wire   [7:0] or_ln_fu_424_p3;
wire  signed [13:0] sext_ln215_fu_431_p1;
wire   [13:0] add_ln215_2_fu_435_p2;
wire   [6:0] lshr_ln215_1_fu_441_p4;
wire   [13:0] tmp_s_fu_451_p3;
wire   [0:0] xor_ln17_fu_414_p2;
wire   [7:0] tmp_7_fu_463_p3;
wire   [8:0] zext_ln1346_3_fu_502_p1;
wire   [8:0] zext_ln1346_2_fu_498_p1;
wire   [6:0] select_ln17_6_fu_489_p3;
wire   [13:0] tmp_17_fu_512_p3;
wire   [8:0] zext_ln1346_1_fu_528_p1;
wire   [8:0] zext_ln1346_fu_524_p1;
wire   [7:0] zext_ln18_1_fu_495_p1;
wire   [7:0] add_ln26_fu_538_p2;
wire   [0:0] tmp_15_fu_544_p3;
wire   [6:0] select_ln215_fu_552_p3;
wire   [6:0] grp_fu_294_p2;
wire   [13:0] tmp_16_fu_560_p3;
wire   [13:0] tmp_18_fu_573_p3;
wire   [6:0] grp_fu_299_p2;
wire   [9:0] zext_ln1346_6_fu_602_p1;
wire   [9:0] zext_ln1346_7_fu_605_p1;
wire   [9:0] ret_14_fu_609_p2;
wire   [9:0] zext_ln1346_8_fu_615_p1;
wire   [13:0] zext_ln18_2_fu_599_p1;
wire   [13:0] or_ln17_fu_590_p2;
wire   [13:0] add_ln215_4_fu_625_p2;
wire   [6:0] lshr_ln215_2_fu_631_p4;
wire   [13:0] tmp_3_fu_641_p3;
wire   [9:0] zext_ln215_10_fu_654_p1;
wire   [9:0] zext_ln215_12_fu_657_p1;
wire   [9:0] ret_12_fu_661_p2;
wire   [9:0] zext_ln1346_5_fu_667_p1;
wire   [9:0] ret_3_fu_671_p2;
wire   [13:0] tmp_5_fu_697_p3;
wire   [13:0] or_ln215_fu_722_p2;
wire   [8:0] zext_ln215_3_fu_740_p1;
wire   [8:0] zext_ln215_2_fu_736_p1;
wire   [13:0] or_ln215_1_fu_750_p2;
wire   [8:0] zext_ln215_7_fu_764_p1;
wire   [9:0] zext_ln215_4_fu_787_p1;
wire   [9:0] zext_ln215_5_fu_790_p1;
wire   [9:0] zext_ln215_8_fu_800_p1;
wire   [9:0] zext_ln215_9_fu_803_p1;
wire   [9:0] add_ln1346_3_fu_807_p2;
wire   [9:0] ret_fu_794_p2;
wire   [9:0] select_ln17_3_fu_813_p3;
wire   [22:0] grp_fu_886_p3;
wire   [9:0] zext_ln1346_4_fu_850_p1;
wire   [9:0] zext_ln17_1_fu_842_p1;
wire   [9:0] ret_13_fu_853_p2;
wire   [9:0] zext_ln17_2_fu_846_p1;
wire   [9:0] ret_6_fu_859_p2;
wire   [20:0] grp_fu_895_p2;
wire   [9:0] grp_fu_886_p0;
wire   [7:0] grp_fu_886_p1;
wire   [12:0] grp_fu_886_p2;
wire   [9:0] grp_fu_895_p0;
wire   [11:0] grp_fu_895_p1;
wire    ap_CS_fsm_state14;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [10:0] grp_fu_886_p00;
wire   [10:0] grp_fu_886_p10;
wire   [20:0] grp_fu_895_p00;
reg    ap_condition_950;
reg    ap_condition_956;
reg    ap_condition_963;
reg    ap_condition_969;
reg    ap_condition_976;
reg    ap_condition_982;
reg    ap_condition_987;
reg    ap_condition_992;
reg    ap_condition_996;
reg    ap_condition_1001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

im_pros_AXI_CPU_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXI_CPU_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXI_CPU_DATA_WIDTH ))
AXI_CPU_s_axi_U(
    .AWVALID(s_axi_AXI_CPU_AWVALID),
    .AWREADY(s_axi_AXI_CPU_AWREADY),
    .AWADDR(s_axi_AXI_CPU_AWADDR),
    .WVALID(s_axi_AXI_CPU_WVALID),
    .WREADY(s_axi_AXI_CPU_WREADY),
    .WDATA(s_axi_AXI_CPU_WDATA),
    .WSTRB(s_axi_AXI_CPU_WSTRB),
    .ARVALID(s_axi_AXI_CPU_ARVALID),
    .ARREADY(s_axi_AXI_CPU_ARREADY),
    .ARADDR(s_axi_AXI_CPU_ARADDR),
    .RVALID(s_axi_AXI_CPU_RVALID),
    .RREADY(s_axi_AXI_CPU_RREADY),
    .RDATA(s_axi_AXI_CPU_RDATA),
    .RRESP(s_axi_AXI_CPU_RRESP),
    .BVALID(s_axi_AXI_CPU_BVALID),
    .BREADY(s_axi_AXI_CPU_BREADY),
    .BRESP(s_axi_AXI_CPU_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .imageIn_address0(imageIn_address0),
    .imageIn_ce0(imageIn_ce0),
    .imageIn_q0(imageIn_q0),
    .imageOut_address0(imageOut_address0),
    .imageOut_ce0(imageOut_ce0),
    .imageOut_we0(imageOut_we0),
    .imageOut_d0(imageOut_d0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

im_pros_am_addmul_10ns_8ns_13ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 13 ),
    .dout_WIDTH( 23 ))
am_addmul_10ns_8ns_13ns_23_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_886_p0),
    .din1(grp_fu_886_p1),
    .din2(grp_fu_886_p2),
    .ce(1'b1),
    .dout(grp_fu_886_p3)
);

im_pros_mul_mul_10ns_12ns_21_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 21 ))
mul_mul_10ns_12ns_21_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_895_p0),
    .din1(grp_fu_895_p1),
    .ce(1'b1),
    .dout(grp_fu_895_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_259 <= select_ln17_1_reg_947;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_259 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten_reg_271 <= add_ln17_reg_1094;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_271 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        j_reg_283 <= add_ln18_reg_1049;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_reg_283 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln18_reg_924 == 1'd1) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        add_ln1346_2_reg_1084 <= add_ln1346_2_fu_768_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add_ln17_reg_1094 <= add_ln17_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        add_ln18_reg_1049 <= add_ln18_fu_688_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln17_reg_920 <= icmp_ln17_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_fu_337_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln18_reg_924 <= icmp_ln18_fu_343_p2;
        icmp_ln20_1_reg_968 <= icmp_ln20_1_fu_401_p2;
        imageOut_addr_2_reg_963 <= zext_ln34_fu_389_p1;
        select_ln17_2_reg_954 <= select_ln17_2_fu_369_p3;
        select_ln17_reg_932 <= select_ln17_fu_349_p3;
        trunc_ln17_reg_958 <= trunc_ln17_fu_377_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        icmp_ln20_reg_983 <= icmp_ln20_fu_419_p2;
        tmp_8_reg_977[13 : 7] <= tmp_8_fu_407_p3[13 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        imageOut_addr_reg_1114[13 : 7] <= zext_ln22_fu_838_p1[13 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        indvars_iv_next303_mid1_reg_1003 <= indvars_iv_next303_mid1_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvars_iv_next303_reg_902 <= indvars_iv_next303_fu_312_p2;
        tmp_2_reg_909[13 : 7] <= tmp_2_fu_318_p3[13 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        reg_304 <= imageIn_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln17_2_reg_954 == 1'd1) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln20_reg_983 == 1'd0) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_308 <= imageIn_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln18_reg_924 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        ret_10_reg_1074 <= ret_10_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (select_ln17_2_reg_954 == 1'd1) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ret_11_reg_1019 <= ret_11_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln20_reg_983 == 1'd0) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        ret_15_reg_1039 <= ret_15_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ret_4_reg_1008 <= ret_4_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_fu_337_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        select_ln17_1_reg_947 <= select_ln17_1_fu_357_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        select_ln17_4_reg_1064[13 : 7] <= select_ln17_4_fu_709_p3[13 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        select_ln17_5_reg_1089[13 : 7] <= select_ln17_5_fu_774_p3[13 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_reg_997[13 : 7] <= tmp_fu_475_p3[13 : 7];
    end
end

always @ (*) begin
    if ((icmp_ln17_reg_920 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_263_p4 = select_ln17_1_reg_947;
    end else begin
        ap_phi_mux_i_phi_fu_263_p4 = i_reg_259;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_275_p4 = add_ln17_reg_1094;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_275_p4 = indvar_flatten_reg_271;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_j_phi_fu_287_p4 = add_ln18_reg_1049;
    end else begin
        ap_phi_mux_j_phi_fu_287_p4 = j_reg_283;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            imageIn_address0 = select_ln17_5_reg_1089;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
            imageIn_address0 = zext_ln215_16_fu_824_p1;
        end else if ((1'b1 == ap_condition_1001)) begin
            imageIn_address0 = tmp_4_fu_755_p3;
        end else if ((1'b1 == ap_condition_996)) begin
            imageIn_address0 = tmp_1_fu_727_p3;
        end else if ((1'b1 == ap_condition_992)) begin
            imageIn_address0 = zext_ln215_6_fu_704_p1;
        end else if ((1'b1 == ap_condition_987)) begin
            imageIn_address0 = zext_ln215_fu_693_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            imageIn_address0 = zext_ln215_15_fu_649_p1;
        end else if ((1'b1 == ap_condition_982)) begin
            imageIn_address0 = zext_ln215_13_fu_585_p1;
        end else if ((1'b1 == ap_condition_976)) begin
            imageIn_address0 = zext_ln215_19_fu_580_p1;
        end else if ((1'b1 == ap_condition_969)) begin
            imageIn_address0 = zext_ln215_17_fu_568_p1;
        end else if ((1'b1 == ap_condition_963)) begin
            imageIn_address0 = zext_ln215_18_fu_519_p1;
        end else if ((1'b1 == ap_condition_956)) begin
            imageIn_address0 = zext_ln215_11_fu_470_p1;
        end else if ((1'b1 == ap_condition_950)) begin
            imageIn_address0 = zext_ln215_14_fu_458_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            imageIn_address0 = zext_ln34_fu_389_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            imageIn_address0 = zext_ln215_1_fu_326_p1;
        end else begin
            imageIn_address0 = 'bx;
        end
    end else begin
        imageIn_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln18_reg_924 == 1'd1) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln18_reg_924 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln18_reg_924 == 1'd1) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln18_reg_924 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (select_ln17_2_reg_954 == 1'd1) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln20_reg_983 == 1'd0) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln17_2_reg_954 == 1'd1) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln20_reg_983 == 1'd0) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (select_ln17_2_reg_954 == 1'd1) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        imageIn_ce0 = 1'b1;
    end else begin
        imageIn_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        imageOut_address0 = imageOut_addr_reg_1114;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        imageOut_address0 = zext_ln22_fu_838_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        imageOut_address0 = imageOut_addr_2_reg_963;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        imageOut_address0 = zext_ln18_fu_595_p1;
    end else begin
        imageOut_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        imageOut_ce0 = 1'b1;
    end else begin
        imageOut_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        imageOut_d0 = {{grp_fu_895_p2[19:12]}};
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        imageOut_d0 = {{ret_6_fu_859_p2[9:2]}};
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        imageOut_d0 = {{grp_fu_886_p3[21:14]}};
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        imageOut_d0 = {{ret_3_fu_671_p2[9:2]}};
    end else begin
        imageOut_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (select_ln17_2_reg_954 == 1'd1) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln20_reg_983 == 1'd0) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln20_1_reg_968 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln20_reg_983 == 1'd1) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        imageOut_we0 = 1'b1;
    end else begin
        imageOut_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln17_reg_920 == 1'd1) & (1'b0 == ap_block_pp0_stage8_subdone)) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln17_reg_920 == 1'd1) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1346_2_fu_768_p2 = (zext_ln215_7_fu_764_p1 + zext_ln215_3_fu_740_p1);

assign add_ln1346_3_fu_807_p2 = (zext_ln215_8_fu_800_p1 + zext_ln215_9_fu_803_p1);

assign add_ln17_fu_781_p2 = (indvar_flatten_reg_271 + 14'd1);

assign add_ln18_fu_688_p2 = (select_ln17_reg_932 + 7'd1);

assign add_ln215_2_fu_435_p2 = ($signed(sext_ln215_fu_431_p1) + $signed(tmp_8_fu_407_p3));

assign add_ln215_4_fu_625_p2 = (zext_ln18_2_fu_599_p1 + or_ln17_fu_590_p2);

assign add_ln26_fu_538_p2 = ($signed(zext_ln18_1_fu_495_p1) + $signed(8'd255));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1001 = ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln18_reg_924 == 1'd1) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage7));
end

always @ (*) begin
    ap_condition_950 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage2));
end

always @ (*) begin
    ap_condition_956 = ((1'b1 == ap_CS_fsm_pp0_stage2) & (select_ln17_2_reg_954 == 1'd1) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage2));
end

always @ (*) begin
    ap_condition_963 = ((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln20_reg_983 == 1'd0) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage3));
end

always @ (*) begin
    ap_condition_969 = ((1'b1 == ap_CS_fsm_pp0_stage3) & (select_ln17_2_reg_954 == 1'd1) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage3));
end

always @ (*) begin
    ap_condition_976 = ((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln20_reg_983 == 1'd0) & (select_ln17_2_reg_954 == 1'd0) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage4));
end

always @ (*) begin
    ap_condition_982 = ((1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln17_2_reg_954 == 1'd1) & (icmp_ln20_1_reg_968 == 1'd0) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage4));
end

always @ (*) begin
    ap_condition_987 = ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln18_reg_924 == 1'd0) & (1'b0 == ap_block_pp0_stage6));
end

always @ (*) begin
    ap_condition_992 = ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln18_reg_924 == 1'd1) & (icmp_ln17_reg_920 == 1'd0) & (1'b0 == ap_block_pp0_stage6));
end

always @ (*) begin
    ap_condition_996 = ((1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln18_reg_924 == 1'd0) & (1'b0 == ap_block_pp0_stage7));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cmp2_fu_331_p2 = ((i_reg_259 == 7'd0) ? 1'b1 : 1'b0);

assign cmp2_mid1_fu_364_p2 = ((indvars_iv_next303_reg_902 == 7'd0) ? 1'b1 : 1'b0);

assign grp_fu_294_p2 = ($signed(select_ln17_reg_932) + $signed(7'd127));

assign grp_fu_299_p2 = (select_ln17_reg_932 + 7'd1);

assign grp_fu_886_p0 = grp_fu_886_p00;

assign grp_fu_886_p00 = ret_15_reg_1039;

assign grp_fu_886_p1 = grp_fu_886_p10;

assign grp_fu_886_p10 = imageIn_q0;

assign grp_fu_886_p2 = 23'd3277;

assign grp_fu_895_p0 = grp_fu_895_p00;

assign grp_fu_895_p00 = select_ln17_3_fu_813_p3;

assign grp_fu_895_p1 = 21'd1366;

assign icmp_ln17_fu_337_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_275_p4 == 14'd12065) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_343_p2 = ((ap_phi_mux_j_phi_fu_287_p4 == 7'd127) ? 1'b1 : 1'b0);

assign icmp_ln20_1_fu_401_p2 = ((or_ln20_fu_395_p2 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_419_p2 = ((select_ln17_reg_932 == 7'd0) ? 1'b1 : 1'b0);

assign indvars_iv_next303_fu_312_p2 = (ap_phi_mux_i_phi_fu_263_p4 + 7'd1);

assign indvars_iv_next303_mid1_fu_483_p2 = (i_reg_259 + 7'd2);

assign lshr_ln215_1_fu_441_p4 = {{add_ln215_2_fu_435_p2[13:7]}};

assign lshr_ln215_2_fu_631_p4 = {{add_ln215_4_fu_625_p2[13:7]}};

assign or_ln17_fu_590_p2 = (tmp_8_reg_977 | 14'd1);

assign or_ln20_fu_395_p2 = (select_ln17_fu_349_p3 | select_ln17_1_fu_357_p3);

assign or_ln215_1_fu_750_p2 = (tmp_2_reg_909 | 14'd1);

assign or_ln215_fu_722_p2 = (tmp_reg_997 | 14'd1);

assign or_ln_fu_424_p3 = {{1'd1}, {select_ln17_reg_932}};

assign ret_10_fu_744_p2 = (zext_ln215_3_fu_740_p1 + zext_ln215_2_fu_736_p1);

assign ret_11_fu_532_p2 = (zext_ln1346_1_fu_528_p1 + zext_ln1346_fu_524_p1);

assign ret_12_fu_661_p2 = (zext_ln215_10_fu_654_p1 + zext_ln215_12_fu_657_p1);

assign ret_13_fu_853_p2 = (zext_ln1346_4_fu_850_p1 + zext_ln17_1_fu_842_p1);

assign ret_14_fu_609_p2 = (zext_ln1346_6_fu_602_p1 + zext_ln1346_7_fu_605_p1);

assign ret_15_fu_619_p2 = (ret_14_fu_609_p2 + zext_ln1346_8_fu_615_p1);

assign ret_3_fu_671_p2 = (ret_12_fu_661_p2 + zext_ln1346_5_fu_667_p1);

assign ret_4_fu_506_p2 = (zext_ln1346_3_fu_502_p1 + zext_ln1346_2_fu_498_p1);

assign ret_6_fu_859_p2 = (ret_13_fu_853_p2 + zext_ln17_2_fu_846_p1);

assign ret_fu_794_p2 = (zext_ln215_4_fu_787_p1 + zext_ln215_5_fu_790_p1);

assign select_ln17_1_fu_357_p3 = ((icmp_ln18_fu_343_p2[0:0] == 1'b1) ? indvars_iv_next303_reg_902 : i_reg_259);

assign select_ln17_2_fu_369_p3 = ((icmp_ln18_fu_343_p2[0:0] == 1'b1) ? cmp2_mid1_fu_364_p2 : cmp2_fu_331_p2);

assign select_ln17_3_fu_813_p3 = ((icmp_ln18_reg_924[0:0] == 1'b1) ? add_ln1346_3_fu_807_p2 : ret_fu_794_p2);

assign select_ln17_4_fu_709_p3 = ((icmp_ln18_reg_924[0:0] == 1'b1) ? tmp_5_fu_697_p3 : tmp_2_reg_909);

assign select_ln17_5_fu_774_p3 = ((icmp_ln18_reg_924[0:0] == 1'b1) ? tmp_4_fu_755_p3 : tmp_1_fu_727_p3);

assign select_ln17_6_fu_489_p3 = ((icmp_ln18_reg_924[0:0] == 1'b1) ? indvars_iv_next303_mid1_fu_483_p2 : indvars_iv_next303_reg_902);

assign select_ln17_fu_349_p3 = ((icmp_ln18_fu_343_p2[0:0] == 1'b1) ? 7'd0 : ap_phi_mux_j_phi_fu_287_p4);

assign select_ln215_fu_552_p3 = ((tmp_15_fu_544_p3[0:0] == 1'b1) ? 7'd127 : 7'd0);

assign sext_ln215_fu_431_p1 = $signed(or_ln_fu_424_p3);

assign tmp_15_fu_544_p3 = add_ln26_fu_538_p2[32'd7];

assign tmp_16_fu_560_p3 = {{select_ln215_fu_552_p3}, {grp_fu_294_p2}};

assign tmp_17_fu_512_p3 = {{select_ln17_6_fu_489_p3}, {select_ln17_reg_932}};

assign tmp_18_fu_573_p3 = {{select_ln17_1_reg_947}, {grp_fu_294_p2}};

assign tmp_1_fu_727_p3 = {{50'd0}, {or_ln215_fu_722_p2}};

assign tmp_2_fu_318_p3 = {{indvars_iv_next303_fu_312_p2}, {7'd0}};

assign tmp_3_fu_641_p3 = {{lshr_ln215_2_fu_631_p4}, {grp_fu_299_p2}};

assign tmp_4_fu_755_p3 = {{50'd0}, {or_ln215_1_fu_750_p2}};

assign tmp_5_fu_697_p3 = {{indvars_iv_next303_mid1_reg_1003}, {7'd0}};

assign tmp_7_fu_463_p3 = {{xor_ln17_fu_414_p2}, {select_ln17_reg_932}};

assign tmp_8_fu_407_p3 = {{select_ln17_1_reg_947}, {7'd0}};

assign tmp_9_fu_381_p3 = {{select_ln17_1_fu_357_p3}, {select_ln17_fu_349_p3}};

assign tmp_fu_475_p3 = {{i_reg_259}, {7'd0}};

assign tmp_s_fu_451_p3 = {{lshr_ln215_1_fu_441_p4}, {select_ln17_reg_932}};

assign trunc_ln17_fu_377_p1 = select_ln17_1_fu_357_p3[0:0];

assign xor_ln17_fu_414_p2 = (trunc_ln17_reg_958 ^ 1'd1);

assign zext_ln1346_1_fu_528_p1 = imageIn_q0;

assign zext_ln1346_2_fu_498_p1 = reg_308;

assign zext_ln1346_3_fu_502_p1 = imageIn_q0;

assign zext_ln1346_4_fu_850_p1 = ret_4_reg_1008;

assign zext_ln1346_5_fu_667_p1 = imageIn_q0;

assign zext_ln1346_6_fu_602_p1 = ret_4_reg_1008;

assign zext_ln1346_7_fu_605_p1 = reg_308;

assign zext_ln1346_8_fu_615_p1 = imageIn_q0;

assign zext_ln1346_fu_524_p1 = reg_308;

assign zext_ln17_1_fu_842_p1 = reg_304;

assign zext_ln17_2_fu_846_p1 = imageIn_q0;

assign zext_ln18_1_fu_495_p1 = select_ln17_reg_932;

assign zext_ln18_2_fu_599_p1 = select_ln17_reg_932;

assign zext_ln18_fu_595_p1 = select_ln17_reg_932;

assign zext_ln215_10_fu_654_p1 = ret_11_reg_1019;

assign zext_ln215_11_fu_470_p1 = tmp_7_fu_463_p3;

assign zext_ln215_12_fu_657_p1 = reg_308;

assign zext_ln215_13_fu_585_p1 = grp_fu_299_p2;

assign zext_ln215_14_fu_458_p1 = tmp_s_fu_451_p3;

assign zext_ln215_15_fu_649_p1 = tmp_3_fu_641_p3;

assign zext_ln215_16_fu_824_p1 = select_ln17_4_reg_1064;

assign zext_ln215_17_fu_568_p1 = tmp_16_fu_560_p3;

assign zext_ln215_18_fu_519_p1 = tmp_17_fu_512_p3;

assign zext_ln215_19_fu_580_p1 = tmp_18_fu_573_p3;

assign zext_ln215_1_fu_326_p1 = tmp_2_fu_318_p3;

assign zext_ln215_2_fu_736_p1 = imageIn_q0;

assign zext_ln215_3_fu_740_p1 = reg_304;

assign zext_ln215_4_fu_787_p1 = ret_10_reg_1074;

assign zext_ln215_5_fu_790_p1 = imageIn_q0;

assign zext_ln215_6_fu_704_p1 = tmp_5_fu_697_p3;

assign zext_ln215_7_fu_764_p1 = imageIn_q0;

assign zext_ln215_8_fu_800_p1 = add_ln1346_2_reg_1084;

assign zext_ln215_9_fu_803_p1 = imageIn_q0;

assign zext_ln215_fu_693_p1 = tmp_reg_997;

assign zext_ln22_fu_838_p1 = tmp_8_reg_977;

assign zext_ln34_fu_389_p1 = tmp_9_fu_381_p3;

always @ (posedge ap_clk) begin
    tmp_2_reg_909[6:0] <= 7'b0000000;
    tmp_8_reg_977[6:0] <= 7'b0000000;
    tmp_reg_997[6:0] <= 7'b0000000;
    select_ln17_4_reg_1064[6:0] <= 7'b0000000;
    select_ln17_5_reg_1089[6:0] <= 7'b0000001;
    select_ln17_5_reg_1089[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    imageOut_addr_reg_1114[6:0] <= 7'b0000000;
end

endmodule //im_pros
